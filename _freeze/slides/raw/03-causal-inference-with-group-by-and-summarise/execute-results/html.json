{
  "hash": "770d7739b96d7412d996b8e61524dc01",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Causal Inference with `group_by` and `summarise`\"\nauthor: \"Lucy D'Agostino McGowan\"\ninstitute: \"Wake Forest University\"\nformat: \"kakashi-revealjs\"\n---\n\n## Observational Studies {background-color=\"#23373B\"}\n\n\n\n**Goal**: To answer a research question\n\n![](img/obs-studies.png)\n\n## Observational Studies {background-color=\"#23373B\"}\n\n**Goal**: To answer a research question\n\n![](img/obs-studies-2.png)\n\n\n## ~~Observational Studies~~ {background-color=\"#23373B\"}\n### **Randomized Controlled Trial**\n\n![](img/randomized.png)\n\n\n## ~~Observational Studies~~ {background-color=\"#23373B\"}\n### **Randomized Controlled Trial**\n\n![](img/randomized-2.png)\n\n## Observational Studies {background-color=\"#23373B\"}\n\n![](img/obs-studies-3.png)\n\n## {background-color=\"#23373B\"}\n\n![](img/trt.png)\n\n## {background-color=\"#23373B\"}\n\n![](img/trt-conf.png)\n\n## Confounding {background-color=\"#23373B\"}\n\n![](img/conf-2.png)\n\n## Confounding {background-color=\"#23373B\"}\n\n![](img/conf-3.png)\n\n## One binary confounder {background-color=\"#23373B\" .center}\n\n## Simulation\n\n\n::: {.cell layout-align=\"center\" output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"|1|3|4-8|9\"}\nn <- 1000 \nsim <- tibble(\n  confounder = rbinom(n, 1, 0.5),\n  p_exposure = case_when(\n    confounder == 1 ~ 0.75,\n    confounder == 0 ~ 0.25\n  ),\n  exposure = rbinom(n, 1, p_exposure),\n  outcome = confounder + rnorm(n)\n) |> select(-p_exposure)\n\nsim\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,000 Ã— 3\n   confounder exposure outcome\n        <int>    <int>   <dbl>\n 1          0        0  1.13  \n 2          0        0  1.11  \n 3          1        1  0.129 \n 4          1        0  1.21  \n 5          0        0  0.0694\n 6          1        1 -0.663 \n 7          1        1  1.81  \n 8          1        1 -0.912 \n 9          1        0 -0.247 \n10          0        0  0.998 \n# â„¹ 990 more rows\n```\n\n\n:::\n:::\n\n\n## Simulation\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm(outcome ~ exposure, data = sim)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = outcome ~ exposure, data = sim)\n\nCoefficients:\n(Intercept)     exposure  \n     0.2688       0.4070  \n```\n\n\n:::\n:::\n\n\n---\n\n## Simulation\n\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|2|3\"}\nsim |>\n  group_by(exposure) |>\n  summarise(avg_y = mean(outcome)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 2\n  exposure avg_y\n     <int> <dbl>\n1        0 0.269\n2        1 0.676\n```\n\n\n:::\n:::\n\n\n## Simulation\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsim |>\n  group_by(exposure) |>\n  summarise(avg_y = mean(outcome)) |>\n  pivot_wider(\n    names_from = exposure, \n    values_from = avg_y,  \n    names_prefix = \"x_\"\n  ) |>\n  summarise(estimate = x_1 - x_0) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã— 1\n  estimate\n     <dbl>\n1    0.407\n```\n\n\n:::\n:::\n\n\n## *Your Turn 1* (`03-ci-with-group-by-and-summarise-exercises.qmd`)\n\n### Group the dataset by `confounder` and `exposure`\n### Calculate the mean of the `outcome` for the groups\n\n`<div class=\"countdown\" id=\"timer_0fcec3b9\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>`{=html}\n\n## *Your Turn 1*\n\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\nsim |>\n  group_by(confounder, exposure) |>\n  summarise(avg_y = mean(outcome))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 Ã— 3\n# Groups:   confounder [2]\n  confounder exposure    avg_y\n       <int>    <int>    <dbl>\n1          0        0 -0.00907\n2          0        1 -0.0166 \n3          1        0  1.09   \n4          1        1  0.936  \n```\n\n\n:::\n:::\n\n\n## *Your Turn 1*\n\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\nsim |>\n  group_by(confounder, exposure) |>\n  summarise(avg_y = mean(outcome)) |>\n  pivot_wider(\n    names_from = exposure,\n    values_from = avg_y,  \n    names_prefix = \"x_\"\n  ) |>\n  summarise(estimate = x_1 - x_0) |>\n  # note: we would need to weight this \n  # if the confounder groups were not equal sized\n  summarise(estimate = mean(estimate))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã— 1\n  estimate\n     <dbl>\n1  -0.0794\n```\n\n\n:::\n:::\n\n\n. . .\n\nðŸŽ‰\n\n## Two binary confounders {background-color=\"#23373B\" .center}\n\n## Simulation\n\n\n::: {.cell layout-align=\"center\" output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"|4-10,12\"}\nn <- 1000\nsim2 <- tibble(\n  confounder_1 = rbinom(n, 1, 0.5),\n  confounder_2 = rbinom(n, 1, 0.5), \n  p_exposure = case_when(\n    confounder_1 == 1 & confounder_2 == 1 ~ 0.75,\n    confounder_1 == 0 & confounder_2 == 1 ~ 0.9,\n    confounder_1 == 1 & confounder_2 == 0 ~ 0.2,\n    confounder_1 == 0 & confounder_2 == 0 ~ 0.1,\n  ),\n  exposure = rbinom(n, 1, p_exposure),\n  outcome = confounder_1 + confounder_2 + rnorm(n) \n) |> select(-p_exposure)\n\nsim2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,000 Ã— 4\n   confounder_1 confounder_2 exposure outcome\n          <int>        <int>    <int>   <dbl>\n 1            0            0        0   0.521\n 2            1            0        0   1.38 \n 3            0            0        0  -0.624\n 4            0            1        1   0.427\n 5            1            0        1   1.31 \n 6            0            0        0  -0.707\n 7            1            1        1   2.52 \n 8            1            0        0   1.45 \n 9            0            0        0  -0.505\n10            0            1        1   0.793\n# â„¹ 990 more rows\n```\n\n\n:::\n:::\n\n\n## Simulation\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm(outcome ~ exposure, data = sim2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = outcome ~ exposure, data = sim2)\n\nCoefficients:\n(Intercept)     exposure  \n     0.6395       0.6951  \n```\n\n\n:::\n:::\n\n\n## *Your Turn 2*\n\n### Group the dataset by the confounders and exposure\n### Calculate the mean of the outcome for the groups\n\n`<div class=\"countdown\" id=\"timer_711604d4\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">02</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>`{=html}\n\n## *Your Turn 2*\n\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\nsim2 |>\n  group_by(confounder_1, confounder_2, exposure) |>\n  summarise(avg_y = mean(outcome)) |>\n  pivot_wider(\n    names_from = exposure,\n    values_from = avg_y,  \n    names_prefix = \"x_\"\n  ) |>\n  summarise(estimate = x_1 - x_0, .groups = \"drop\") |>\n  summarise(estimate = mean(estimate)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã— 1\n  estimate\n     <dbl>\n1  -0.0731\n```\n\n\n:::\n:::\n\n\n## Simulation\n\n\n::: {.cell layout-align=\"center\" output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"|1\"}\nn <- 100000\nbig_sim2 <- tibble(\n  confounder_1 = rbinom(n, 1, 0.5),\n  confounder_2 = rbinom(n, 1, 0.5), \n  p_exposure = case_when(\n    confounder_1 == 1 & confounder_2 == 1 ~ 0.75,\n    confounder_1 == 0 & confounder_2 == 1 ~ 0.9,\n    confounder_1 == 1 & confounder_2 == 0 ~ 0.2,\n    confounder_1 == 0 & confounder_2 == 0 ~ 0.1,\n  ),\n  exposure = rbinom(n, 1, p_exposure),\n  outcome = confounder_1 + confounder_2 + rnorm(n) \n) |> select(-p_exposure)\n\nbig_sim2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 100,000 Ã— 4\n   confounder_1 confounder_2 exposure outcome\n          <int>        <int>    <int>   <dbl>\n 1            1            1        1   2.35 \n 2            1            1        0   3.71 \n 3            0            0        0   2.08 \n 4            0            1        1   0.516\n 5            0            0        0  -0.166\n 6            1            1        1   1.58 \n 7            0            0        0   0.472\n 8            1            0        0   3.22 \n 9            0            1        1   0.929\n10            0            1        1   1.41 \n# â„¹ 99,990 more rows\n```\n\n\n:::\n:::\n\n\n## Simulation\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm(outcome ~ exposure, data = big_sim2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = outcome ~ exposure, data = big_sim2)\n\nCoefficients:\n(Intercept)     exposure  \n     0.6782       0.6561  \n```\n\n\n:::\n:::\n\n\n## Simulation\n\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\nbig_sim2 |>\n  group_by(confounder_1, confounder_2, exposure) |>\n  summarise(avg_y = mean(outcome)) |>\n  pivot_wider(\n    names_from = exposure,\n    values_from = avg_y,  \n    names_prefix = \"x_\"\n  ) |>\n  summarise(estimate = x_1 - x_0, .groups = \"drop\") |>\n  summarise(estimate = mean(estimate))  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã— 1\n  estimate\n     <dbl>\n1   0.0187\n```\n\n\n:::\n:::\n\n\n\n## Continuous confounder? {background-color=\"#23373B\" .center}\n\n## Simulation\n\n\n::: {.cell layout-align=\"center\" output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"|3\"}\nn <- 10000 \nsim3 <- tibble(\n  confounder = rnorm(n), \n  p_exposure = exp(confounder) / (1 + exp(confounder)),\n  exposure = rbinom(n, 1, p_exposure),\n  outcome = confounder + rnorm(n) \n) |> select(-p_exposure)\n\nsim3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10,000 Ã— 3\n   confounder exposure outcome\n        <dbl>    <int>   <dbl>\n 1     -0.167        0  -0.560\n 2      0.252        1   0.628\n 3     -0.321        1  -0.608\n 4      0.621        0   1.58 \n 5     -0.619        1   0.358\n 6     -0.897        0  -1.95 \n 7     -2.01         0  -2.50 \n 8      0.296        0  -1.10 \n 9     -0.504        1  -0.316\n10     -0.536        1   1.12 \n# â„¹ 9,990 more rows\n```\n\n\n:::\n:::\n\n\n## Simulation\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm(outcome ~ exposure, data = sim3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = outcome ~ exposure, data = sim3)\n\nCoefficients:\n(Intercept)     exposure  \n    -0.4036       0.8152  \n```\n\n\n:::\n:::\n\n\n## *Your Turn 3*\n\n### Use `ntile()` from dplyr to calculate a binned version of `confounder` called `confounder_q`. We'll create a variable with 5 bins.\n### Group the dataset by the binned variable you just created and exposure\n### Calculate the mean of the outcome for the groups\n\n`<div class=\"countdown\" id=\"timer_60177d1a\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>`{=html}\n\n## *Your Turn 3*\n\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|2|3-4\"}\nsim3 |>\n  mutate(confounder_q = ntile(confounder, 5)) |>\n  group_by(confounder_q, exposure) |>\n  summarise(avg_y = mean(outcome)) |>\n  pivot_wider(\n    names_from = exposure,\n    values_from = avg_y,  \n    names_prefix = \"x_\"\n  ) |>\n  summarise(estimate = x_1 - x_0) |>\n  summarise(estimate = mean(estimate))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã— 1\n  estimate\n     <dbl>\n1   0.0728\n```\n\n\n:::\n:::\n\n\n## {background-color=\"#23373B\" .center .huge}\n\n### What if we could come up with a **summary score** of all confounders?\n\n",
    "supporting": [
      "03-causal-inference-with-group-by-and-summarise_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"03-causal-inference-with-group-by-and-summarise_files/libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"03-causal-inference-with-group-by-and-summarise_files/libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}