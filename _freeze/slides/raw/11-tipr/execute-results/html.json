{
  "hash": "3c6d289a474a99072a6f927bfebc05ac",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tipping Point Sensitivity Analyses\"\nauthor: \"Lucy D'Agostino McGowan\"\ninstitute: \"Wake Forest University\"\nformat: kakashi-revealjs\nknitr:\n  opts_chunk: \n    eval: false\n---\n\n\n\n\n\n## Recall: Propensity scores {background-color=\"#23373B\"}\n\nRosenbaum and Rubin showed in observational studies, conditioning on **propensity scores** can lead to unbiased estimates of the exposure effect\n\n::: nonincremental\n1. **There are no unmeasured confounders**\n2. Every subject has a nonzero probability of receiving either exposure\n:::\n\n# Quantifying Unmeasured Confounding {background-color=\"#23373B\"}\n\n##\n\n![](img/sens.png)\n\n## Quantifying Unmeasured Confounding {background-color=\"#23373B\"}\n\n1. The exposure-outcome effect\n1. The exposure-unmeasured confounder effect\n1. The unmeasured confounder-outcome effect\n\n## *Quantifying Unmeasured Confounding*\n\n![](img/adjust.png)\n\n[D’Agostino McGowan, L. Sensitivity Analyses for Unmeasured Confounders. Curr Epidemiol Rep 9, 361–375 (2022)](https://doi.org/10.1007/s40471-022-00308-6)\n\n\n## {background-color=\"#23373B\" .center .large}\n\n### **What will tip our confidence bound to cross zero?**\n\n## *Quantifying Unmeasured Confounding*\n\n![](img/tipr-table.png){width=65%}\n[D’Agostino McGowan, L. Sensitivity Analyses for Unmeasured Confounders. Curr Epidemiol Rep 9, 361–375 (2022)](https://doi.org/10.1007/s40471-022-00308-6)\n\n## \n\n:::: columns\n\n::: column\n![](img/tipr-stuff.png)\n:::\n\n::: column\n\n\n![](img/logo.png){width=25% fig-align=\"right\"}\n\n\n::: small\n* `{action}_{effect}_with_{what}`\n* `tip_rr_with_continous()`\n* `adjust_coef_with_r2()`\n:::\n\n::: tiny\n[D’Agostino McGowan, L., (2022). tipr: An R package for sensitivity analyses for unmeasured confounders. Journal of Open Source Software, 7(77), 4495](https://doi.org/10.21105/joss.04495)\n:::\n\n:::\n::::\n\n## {background-color=\"#23373B\" .center .huge}\n\n### **tipr**\n\n##\n\n![](img/metformin.png)\n\n## Question\n\n![](img/met-cancer.png)\n\n## Analysis\n\n* New-user design\n* **Matched** 42,217 new metformin users to 42,217 new sulfonylurea users\n* Fit **adjusted Cox proportional hazards model** on the matched cohort\n\n## Results\n\n* **Outcome:** Lung Cancer\n* **Adjusted Hazard Ratio**: 0.87 (0.79, 0.96)\n\n# What if **alcohol consumption** is an unmeasured confounder? {background-color=\"#23373B\"}\n\n# What if heavy alcohol consumption is prevalent among *4%* of Metformin users and *6%* of Sulfonylurea users?\n\n::: tiny \nMeadows SO, Engel CC, Collins RL, Beckman RL, Cefalu M,\nHawes-Dawson J, et al. 2015 health related behaviors survey:\nSubstance use among US active-duty service members. RAND; 2018.\n:::\n\n## `tipr` Example\n\n**What if we assume the effect of alcohol consumption on lung cancer after adjusting for other confounders is 2?**\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|3\"}\nlibrary(tipr)\nadjust_hr_with_binary(\n  effect_observed = c(0.79, 0.87, 0.96),\n  exposed_confounder_prev = .04,\n  unexposed_confounder_prev = .06,\n  confounder_outcome_effect = 2\n)\n```\n:::\n\n\n## Results\n\n::: nonincremental\n* **Outcome:** Lung Cancer\n* **Adjusted Hazard Ratio**: 0.87 (0.79, 0.96)\n:::\n\n## `tipr` Example\n\n**What if we assume the effect of alcohol consumption on lung cancer after adjusting for other confounders is 2?**\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"4,5\"}\nlibrary(tipr)\nadjust_hr_with_binary(\n  effect_observed = c(0.79, 0.87, 0.96),\n  exposed_confounder_prev = .04,\n  unexposed_confounder_prev = .06,\n  confounder_outcome_effect = 2\n)\n```\n:::\n\n\n# What if heavy alcohol consumption is prevalent among *4%* of Metformin users and *6%* of Sulfonylurea users?\n\n::: tiny \nMeadows SO, Engel CC, Collins RL, Beckman RL, Cefalu M,\nHawes-Dawson J, et al. 2015 health related behaviors survey:\nSubstance use among US active-duty service members. RAND; 2018.\n:::\n\n## `tipr` Example\n\n*What if we assume the effect of alcohol consumption on lung cancer after adjusting for other confounders is 2?*\n\n\n::: {.cell layout-align=\"center\" output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nlibrary(tipr)\nadjust_hr_with_binary(\n  effect_observed = c(0.79, 0.87, 0.96),\n  exposed_confounder_prev = .04,\n  unexposed_confounder_prev = .06,\n  confounder_outcome_effect = 2\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  hr_adjusted hr_observed exposed_confounder_prev unexposed_confounder_prev\n        <dbl>       <dbl>                   <dbl>                     <dbl>\n1       0.805        0.79                    0.04                      0.06\n2       0.887        0.87                    0.04                      0.06\n3       0.978        0.96                    0.04                      0.06\n# ℹ 1 more variable: confounder_outcome_effect <dbl>\n```\n\n\n:::\n:::\n\n\n# “If heavy alcohol consumption differed between groups, with *4%* prevalence among metformin users and *6%* among sulfonylureas users, and had an HR of *2* with lung cancer incidence the updated adjusted effect of metformin on lung cancer incidence would be an HR of *0.89 (95% CI: 0.81–0.98)*. Should an unmeasured confounder like this exist, our effect of metformin on lung cancer incidence would be attenuated and fall much closer to the null. {.tiny}\n\n## `tipr` Example\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|5\"}\nsens <- adjust_hr_with_binary(\n  effect_observed = 0.96,\n  exposed_confounder_prev = .04,\n  unexposed_confounder_prev = .06,\n  confounder_outcome_effect = seq(1.1, 3.5, by = 0.1)\n)\n```\n:::\n\n\n## `tipr` Example\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(sens, aes(x = confounder_outcome_effect, y = hr_adjusted)) + \n  geom_point() +\n  geom_hline(yintercept = 1, lty = 2)\n```\n\n::: {.cell-output-display}\n![](11-tipr_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## `tipr` Example\n\n\n::: {.cell layout-align=\"center\" output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"|2|3-5\"}\nlibrary(dplyr)\ntip_hr_with_binary(\n  effect_observed = 0.96,\n  exposed_confounder_prev = .04,\n  unexposed_confounder_prev = .06\n) |> \n  select(confounder_outcome_effect)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  confounder_outcome_effect\n                      <dbl>\n1                      3.27\n```\n\n\n:::\n:::\n\n\n# “If heavy alcohol consumption differed between groups, with *4%* prevalence among metformin users and *6%* among sulfonylureas users, it would need to have an association with lung cancer incidence of *3.27 to tip this analysis* at the 5% level, rendering it inconclusive. This effect is larger than the understood association between lung cancer and alcohol consumption.\" {.tiny}\n\n## *What is known about the unmeasured confounder?*\n\n:::: {.columns}\n\n::: small\n::: center\n::: {.column width=30%}\n### Both exposure and outcome relationship is known\n\n* `adjust_*` functions\n\n:::\n\n::: {.column width=30%}\n### Only one of the exposure/outcome relationships is known\n\n* `adjust_*` functions in an array\n* `tip_*` functions\n:::\n\n::: {.column width=30%}\n\n### Nothing is known\n* `adjust_*` or `tip_*` functions in an array\n* `tip_coef_with_r2()` (measured confounders)\n* Robustness value `r_value()` & E-values `e_value()`\n\n:::\n\n:::\n:::\n::::\n\n## Disney Data: Extra magic morning & wait times\n\n### `tip_coef()`\n\n* `effect_observed`: observed exposure - outcome effect **6.17 minutes (95% CI: 2.02, 10.40)**\n\n## Disney Data\n\n### `tip_coef()`\n* `exposure_confounder_effect`: scaled mean difference between the unmeasured confounder in the exposed and unexposed population\n\n## Disney Data\n\n### `tip_coef()`\n* `confounder_outcome_effect`: relationship between the unmeasured confounder and outcome\n\n## *Your turn*\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_97478832\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n### Use the `tip_coef()` function to conduct a sensitivity analysis for the estimate from your previous exercises. Use the lower bound of the confidence interval for the effect and `0.1` for the exposure-confounder effect.\n",
    "supporting": [
      "11-tipr_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"11-tipr_files/libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"11-tipr_files/libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}