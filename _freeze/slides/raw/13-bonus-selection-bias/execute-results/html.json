{
  "hash": "75f6780cfda772bda26ac69a2d7c0e16",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Bonus: Colliders, selection bias, and loss to follow-up\"\nauthor: \"Malcolm Barrett\"\ninstitute: \"Stanford University\"\nformat: \"kakashi-revealjs\"\n---\n\n\n\n## Confounders and chains\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](13-bonus-selection-bias_files/figure-revealjs/unnamed-chunk-1-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Colliders\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](13-bonus-selection-bias_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Colliders\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](13-bonus-selection-bias_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Let's prove it!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(1234)\ncollider_data <- collider_triangle() |> \n  simulate_data(-.6)\n```\n:::\n\n\n## Let's prove it!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncollider_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 500 × 3\n        m       x       y\n    <dbl>   <dbl>   <dbl>\n 1 -0.829  0.359   1.75  \n 2  0.184  0.619  -1.11  \n 3  1.47  -0.940   0.0642\n 4 -2.43   1.55    1.39  \n 5  0.219 -1.69    0.832 \n 6  1.01   0.199  -0.145 \n 7 -0.811  1.29   -0.872 \n 8 -0.464  0.0675  0.763 \n 9 -0.357  0.264   0.766 \n10 -0.978  0.531   0.506 \n# ℹ 490 more rows\n```\n\n\n:::\n:::\n\n\n## Let's prove it!\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](13-bonus-selection-bias_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Loss to follow-up\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](13-bonus-selection-bias_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Adjusting for selection bias {background-color=\"#23373B\"}\n\n1. Fit a probability of censoring model, e.g. *glm(censoring ~ predictors, family = binomial())*\n2. Create weights using inverse probability strategy\n3. Use weights in your causal model\n\n## {background-color=\"#23373B\" .large .center}\n\n### We won't do it here, but you can include many types of weights in a given model. Just take their product, e.g. *multiply inverse propensity of treatment weights by inverse propensity of censoring weights*.\n\n## *Your Turn*\n\n### Work through Your Turns 1-3 in `13-bonus-selection-bias.qmd`\n\n`<div class=\"countdown\" id=\"timer_e20712cd\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>`{=html}\n",
    "supporting": [
      "13-bonus-selection-bias_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"13-bonus-selection-bias_files/libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"13-bonus-selection-bias_files/libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}