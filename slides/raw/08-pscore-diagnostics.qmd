---
title: "Propensity Score Diagnostics"
author: "Lucy D'Agostino McGowan"
institute: "Wake Forest University"
format: "kakashi-revealjs"
knitr:
  opts_chunk: 
    eval: false
---

```{r}
#| include: false
options(
  tibble.max_extra_cols = 6, 
  tibble.width = 60
)
```

## Checking balance {background-color="#23373B"}

* Love plots (Standardized Mean Difference)
* ECDF plots

## Standardized Mean Difference (SMD) {background-color="#23373B"}

$$\LARGE d = \frac{\bar{x}_{treatment}-\bar{x}_{control}}{\sqrt{\frac{s^2_{treatment}+s^2_{control}}{2}}}$$

## SMD in R ![](img/hex/halfmoon.png){.absolute top=0 right=0 width=140}

<br />

Calculate standardized mean differences

```{r}
#| message: false
#| warning: false
#| code-line-numbers: "|4|6|7|8|9"
library(halfmoon)
library(tidyverse)

smds <- tidy_smd(
  df,
  .vars = c(confounder_1, confounder_2, ...),
  .group = exposure,
  .wts = wts # optional,
  make_dummy_vars = TRUE # optional
)
```

## Calculating SMDs 

```{r}
#| message: false
#| warning: false
#| echo: false
#| eval: true
library(halfmoon)
library(tidyverse)
library(broom)
library(causaldata)
library(propensity)

propensity_model <- glm(
  qsmk ~ sex + 
    race + age + I(age^2) + education + 
    smokeintensity + I(smokeintensity^2) + 
    smokeyrs + I(smokeyrs^2) + exercise + active + 
    wt71 + I(wt71^2), 
  family = binomial(), 
  data = nhefs_complete
)

nhefs_complete_wts <- propensity_model |>
  augment(type.predict = "response", data = nhefs_complete) |>
  mutate(w_ate = wt_ate(.fitted, qsmk))
```


```{r}
#| output-location: slide
#| eval: true
vars <- c(
  "sex", "race", "age", "education",
  "smokeintensity", "smokeyrs", 
  "exercise", "active", "wt71"
)

smds <- tidy_smd(
  nhefs_complete_wts,
  .vars = all_of(vars),
  .group = qsmk,
  .wts = w_ate,
  make_dummy_vars = TRUE
)

smds
```

---

## Plotting SMDs ![](img/hex/halfmoon.png){.absolute top=0 right=0 width=140}

<br />

Plot them! (in a Love plot!)

```{r}
#| code-line-numbers: "|2|3-8|10"
ggplot(
  data = smds,
  aes(
    x = abs(smd), 
    y = variable, 
    group = method, 
    color = method
  )
) +  
  geom_love()
```

## Love plot

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
smds |> 
  arrange(method, abs(smd)) |>
  mutate(variable = fct_inorder(variable)) |> 
ggplot(
  mapping = aes(x = abs(smd), y = variable, group = method, color = method)
) +
  geom_line(orientation = "y") +
  geom_point() + 
  geom_vline(xintercept = 0.1, color = "black", size = 0.1)
```

## Your turn 1

`r countdown::countdown(minutes = 6)`

### Create a Love Plot for the propensity score weighting you created in the previous exercise

## ECDF

For continuous variables, it can be helpful to look at the _whole_ distribution pre and post-weighting rather than a single summary measure

## ECDF

```{r}
#| echo: false
#| message: false
#| warning: false
#| eval: true
ggplot(nhefs_complete_wts, aes(x = wt71, color = factor(qsmk))) +
  geom_ecdf() +
  scale_color_manual("Quit smoking", values = c("#5154B8", "#5DB854"),
                     labels = c("Yes", "No")) + 
  xlab("Weight in Kg in 1971") + 
  ylab("Proportion <= x") 
```

## Unweighted ECDF

```{r}
#| code-line-numbers: "|1|2"
#| eval: true
#| output-location: slide
ggplot(nhefs_complete_wts, aes(x = wt71, color = factor(qsmk))) + 
  geom_ecdf() +
  scale_color_manual(
    "Quit smoking", 
    values = c("#5154B8", "#5DB854"),
    labels = c("Yes", "No")
  ) + 
  xlab("Weight in Kg in 1971") + 
  ylab("Proportion <= x") 
```


## Weighted  ECDF 

```{r}
#| eval: true
#| code-line-numbers: "|2"
#| output-location: slide
ggplot(nhefs_complete_wts, aes(x = wt71, color = factor(qsmk))) +
  geom_ecdf(aes(weights = w_ate)) +
  scale_color_manual(
    "Quit smoking", 
    values = c("#5154B8", "#5DB854"),
    labels = c("Yes", "No")
  ) + 
  xlab("Weight in Kg in 1971") + 
  ylab("Proportion <= x (Weighted)") 
```

## *Your turn 2*

`r countdown::countdown(minutes = 6)`

### Create an unweighted ECDF examining the `park_temperature_high` confounder by whether or not the day had Extra Magic Hours.
### Create a weighted ECDF examining the `park_temperature_high` confounder


## {background-color="#23373B" .center .huge}

### *Bonus!* Weighted Tables in R 


## 1. Create a "design object" to incorporate the weights {.gtsummary}


```{r}
#| message: false
#| warning: false
library(survey)

svy_des <- svydesign(
  ids = ~ 1,
  data = df,
  weights = ~ wts
)
```

## 2. Pass to `gtsummary::tbl_svysummary()` {.gtsummary}

```{r}
#| message: false
#| warning: false
library(gtsummary)
tbl_svysummary(svy_des, by = x) |>
  add_difference(everything() ~ "smd")
# modify_column_hide(ci) to hide CI column
```

## {.gtsummary .tiny}

```{r}
#| message: false
#| warning: false
#| eval: true
#| echo: false
library(survey)
library(gtsummary)

svy_des <- svydesign(
  ids = ~ 1,
  data = nhefs_complete_wts |> select(wt71, race, age, sex, smokeintensity, smokeyrs, exercise, active, w_ate, qsmk),
  weights = ~ w_ate
)
theme_gtsummary_compact()

tbl_svysummary(svy_des, by = qsmk, include = -w_ate) |>
  add_difference(everything() ~ "smd") |>
  modify_column_hide(ci)
```


## {background-color="#23373B" .center .huge}

### *Bonus Your Turn*: Weighted Tables

