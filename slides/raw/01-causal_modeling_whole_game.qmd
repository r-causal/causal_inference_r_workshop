---
title: "Causal Modeling in R: Whole Game"
author: "Malcolm Barrett"
institute: "Stanford University"
format: "kakashi-revealjs"
---

## {background-color="#23373B"}

```{r}
#| label: setup
#| include: false
options(
  tibble.max_extra_cols = 6, 
  tibble.width = 60
)
library(tidyverse)
library(smd)
library(broom)
library(rsample)
library(ggdag)
library(causaldata)
library(propensity)
library(halfmoon)

set.seed(1234)
```

1. Specify causal question (e.g. target trial)
2. Draw assumptions (causal diagram)
3. Model assumptions (e.g., propensity)
4. Diagnose model (e.g., balance)
5. Estimate causal effects (e.g., IPW) 
6. Sensitivity analysis (more later!)


## {background-color="#23373B" .center}

### **We'll focus on the broader ideas behind each step and what they look like all together; we don't expect you to fully digest each idea. We'll spend the rest of the workshop taking up each step in detail**

## {background-color="#23373B" .center}

### **Do people who quit smoking gain weight?**

---

```{r}
library(causaldata)
nhefs_complete_uc <- nhefs_complete |>
  filter(censored == 0)
nhefs_complete_uc
```

## Did those who quit smoking gain weight?

```{r}
#| echo: false
nhefs_complete_uc |>
  ggplot(aes(wt82_71, fill = factor(qsmk))) + 
  geom_vline(xintercept = 0, color = "grey60", size = 1) +
  geom_density(color = "white", alpha = .75, size = .5) +
  ggokabeito::scale_color_okabe_ito(order = c(1, 5)) + 
  theme_minimal() +
  theme(legend.position = "bottom") + 
  labs(
    x = "change in weight (kg)",
    fill = "quit smoking (1 = yes)"
  )
```

---

## Did those who quit smoking gain weight?

```{r}
#| highlight.output: !expr '4:5'
# ~2.5 KGs gained for quit vs. not quit
nhefs_complete_uc |>
  group_by(qsmk) |>
  summarize(
    mean_weight_change = mean(wt82_71), 
    sd = sd(wt82_71),
    .groups = "drop"
  )
```

## {background-color="#23373B" .center}

### **draw your assumptions**

---

```{r}
#| echo: false
#| fig.width: 9
library(ggdag)
# set up DAG
smk_wt_dag <- dagify(
  # specify causes of quitting smoking and weight gain:
  qsmk ~ sex + race + age + education + 
    smokeintensity + smokeyrs + exercise + active + wt71,
  wt82_71 ~ qsmk + sex + race + age + education + 
    smokeintensity + smokeyrs + exercise + active + wt71,
  # specify causal question:
  exposure = "qsmk", 
  outcome = "wt82_71",
  coords = time_ordered_coords(),
  # set up labels:
  # here, I'll use the same variable names as the data set, but I'll label them
  # with clearer names
  labels = c(
    # causal question
    "qsmk" = "quit\nsmoking",
    "wt82_71" = "change in\nweight",
    
    # demographics
    "age" = "age",
    "sex" = "sex",
    "race" = "race",
    "education" = "education",
    
    # health
    "wt71" = "baseline\nweight",
    "active" = "daily\nactivity\nlevel",
    "exercise" = "exercise",
    
    # smoking history
    "smokeintensity" = "smoking\nintensity",
    "smokeyrs" = "yrs of\nsmoking"
  )
) |>
  tidy_dagitty()

smk_wt_dag |>
  filter(name %in% c("qsmk", "wt82_71")) |>
  ggdag(text = FALSE, use_labels = "label") +
  ylim(min(smk_wt_dag$data$y) - 0.25, max(smk_wt_dag$data$y) + 0.25) +  
  xlim(min(smk_wt_dag$data$x) - 0.25, max(smk_wt_dag$data$x) + 0.25) +
  theme_dag()
```

---

```{r}
#| echo: false
#| fig.width: 9
smk_wt_dag |>
  ggdag(text = FALSE, use_labels = "label") +
  ylim(min(smk_wt_dag$data$y) - 0.25, max(smk_wt_dag$data$y) + 0.25) +  
  xlim(min(smk_wt_dag$data$x) - 0.25, max(smk_wt_dag$data$x) + 0.25) +
  theme_dag()
```

## {background-color="#23373B" .center}

### What do I need to control for?

---

```{r}
#| echo: false
#| fig.width: 15
library(ggokabeito)
glyph <- function(data, params, size) {
    data$shape <- 15
    data$size <- 12
    ggplot2::draw_key_point(data, params, size)
}

smk_wt_dag |>
    dag_paths() |>
    mutate(
        effects = case_when(
            set == "1" & path == "open path" ~ "true effect",
            path == "open path" ~ "confounding effect",
            TRUE ~ NA_character_
        ),
        effects = factor(effects, c("true effect", "confounding effect"))
    ) |>
    ggplot(aes(x = x, y = y, xend = xend, yend = yend, color = effects, alpha = path)) +
    geom_dag_edges(aes(edge_alpha = path, edge_colour = effects), show.legend = FALSE) +
    geom_dag_point(
        data = function(.x) dplyr::filter(.x, is.na(path)),
        key_glyph = glyph
    ) +
    geom_dag_point(
        data = function(.x) dplyr::filter(.x, !is.na(path)),
        key_glyph = glyph
    ) +
    facet_wrap(vars(fct_inorder(factor(set)))) +
    expand_plot(
        expand_x = expansion(c(0.25, 0.25)),
        expand_y = expansion(c(0.1, 0.1))
    ) +
    theme_dag() +
    theme(
        legend.position = "top",
        legend.spacing.x = unit(8, "mm"),
        legend.text = element_text(size = rel(2.5)),
        legend.box.margin = margin(b = 20),
        strip.text = element_blank()
    ) +
    coord_cartesian(clip = "off") +
    scale_alpha_manual(
        drop = FALSE,
        values = c("open path" = 1),
        na.value = .5,
        breaks = "open path"
    ) +
    ggraph::scale_edge_alpha_manual(
        drop = FALSE,
        values = c("open path" = 1),
        na.value = .5,
        breaks = "open path"
    ) +
    scale_color_okabe_ito(
        name = NULL,
        na.value = "grey90",
        order = c(3, 6),
        breaks = c("true effect", "confounding effect")
    ) +
    scale_edge_color_okabe_ito(
        name = NULL,
        na.value = "grey90",
        order = c(3, 6),
        breaks = c("true effect", "confounding effect")
    ) +
    guides(alpha = "none", edge_alpha = "none")
```


---

```{r}
#| echo: false
#| fig.width: 9
smk_wt_dag |>
  ggdag_adjustment_set(text = FALSE, use_labels = "label", node_size = 10, shadow = TRUE) +
  theme_dag() + 
  facet_wrap(
    vars(set), 
    labeller = as_labeller(scales::label_wrap(40))
  )
```

## Multivariable regression: what's the association?

```{r}
#| code-line-numbers: "|1-8"
#| output-location: fragment
lm( 
  wt82_71 ~ qsmk + sex +  
    race + age + I(age^2) + education + 
    smokeintensity + I(smokeintensity^2) + 
    smokeyrs + I(smokeyrs^2) + exercise + active + 
    wt71 + I(wt71^2), 
  data = nhefs_complete_uc 
) |>
  tidy(conf.int = TRUE) |>
  filter(term == "qsmk")
```

## {background-color="#23373B" .center}

### **model your assumptions**


## {background-color="#23373B" .center}

### counterfactual: what if <u>everyone</u> quit smoking vs. what if <u>no one</u> quit smoking

## Fit propensity score model

```{r}
#| code-line-numbers: "|1-2"
propensity_model <- glm( 
  qsmk ~ sex +  
    race + age + I(age^2) + education + 
    smokeintensity + I(smokeintensity^2) + 
    smokeyrs + I(smokeyrs^2) + exercise + active + 
    wt71 + I(wt71^2), 
  family = binomial(), 
  data = nhefs_complete_uc
)
```

## Calculate inverse probability weights

```{r}
#| code-line-numbers: "|4,6"
library(propensity)
nhefs_complete_uc <- propensity_model |>
  # predict whether quit smoking
  augment(type.predict = "response", data = nhefs_complete_uc) |>
  # calculate inverse probability
  mutate(wts = wt_ate(.fitted, qsmk)) 
```

## {background-color="#23373B" .center}

### **diagnose your model assumptions**

## What's the distribution of weights?

```{r}
#| echo: false
ggplot(nhefs_complete_uc, aes(wts)) +
  geom_histogram(color = "white", fill = "#E69F00", bins = 50) + 
  #  use a log scale for the x axis
  scale_x_log10() + 
  theme_minimal(base_size = 20) + 
  xlab("Weights")
```

## What are the weights doing to the sample?

```{r}
#| echo: false
nhefs_complete_uc |> 
  mutate(qsmk = factor(qsmk)) |> 
  ggplot(aes(.fitted)) +
  geom_mirror_histogram(
    aes(fill = qsmk),
    bins = 50
  ) +
  scale_y_continuous(labels = abs) +
  labs(x = "propensity score") + 
  theme_minimal(base_size = 20)
```

## What are the weights doing to the sample?

```{r}
#| echo: false
nhefs_complete_uc |> 
  mutate(qsmk = factor(qsmk)) |> 
  ggplot(aes(.fitted)) +
  geom_mirror_histogram(
    aes(group = qsmk),
    bins = 50
  ) +
  geom_mirror_histogram(
    aes(fill = qsmk, weight = wts),
    bins = 50,
    alpha = .5
  ) +
  scale_y_continuous(labels = abs) +
  labs(x = "propensity score") + 
  theme_minimal(base_size = 20)
```

---

```{r}
#| echo: false
#| fig.height: 5.5
vars <- c("sex", "race", "age", "education", "smokeintensity", "smokeyrs", 
          "exercise", "active", "wt71")

plot_df <- nhefs_complete_uc |> 
  tidy_smd(all_of(vars), .group = qsmk, .wts = wts)
```


```{r}
#| echo: false
#| fig.height: 5.5
ggplot(
  data = plot_df |> filter(method == "observed"),
  aes(x = abs(smd), y = variable, group = method, color = method, fill = method)
) +
  geom_line(orientation = "y", size = 1) +
  geom_point(size = 4, color = "white", shape = 21) + 
  geom_vline(xintercept = 0.1, color = "black", linewidth = 0.3) +
  theme_minimal(base_size = 20) +
  theme(axis.title.y = element_blank()) +
  xlim(0, .3)
```

---

```{r}
#| echo: false
#| fig.height: 5.5
ggplot(
  data = plot_df,
  aes(x = abs(smd), y = variable, group = method, color = method, fill = method)
) +
  geom_line(orientation = "y", size = 1) +
  geom_point(size = 4, color = "white", shape = 21) + 
  geom_vline(xintercept = 0.1, color = "black", linewidth = 0.3) +
  theme_minimal(base_size = 20) +
  theme(axis.title.y = element_blank()) +
  scale_color_manual(values = c("grey85", "#00BFC4")) +
  scale_fill_manual(values = c("grey85", "#00BFC4")) +
  xlim(0, .3)
```

## {background-color="#23373B" .center}

### **estimate the causal effects**

## Estimate causal effect with IPW

```{r}
#| code-line-numbers: "|1-2,4"
ipw_model <- lm( 
  wt82_71 ~ qsmk, 
  data = nhefs_complete_uc, 
  weights = wts 
) 

ipw_estimate <- ipw_model |>
  tidy(conf.int = TRUE) |>
  filter(term == "qsmk")
```

## Estimate causal effect with IPW

```{r}
ipw_estimate
```

## Let's fix our confidence intervals with robust SEs!

. . .

```{r}
#| code-line-numbers: "|3-4,6"
# also see robustbase, survey, gee, and others
library(estimatr)
ipw_model_robust <- lm_robust( 
  wt82_71 ~ qsmk, 
  data = nhefs_complete_uc, 
  weights = wts 
) 

ipw_estimate_robust <- ipw_model_robust |>
  tidy(conf.int = TRUE) |>
  filter(term == "qsmk")
```

---

## Let's fix our confidence intervals with robust SEs!

```{r}
as_tibble(ipw_estimate_robust)
```

---

## Let's fix our confidence intervals with the bootstrap!

. . .

```{r}
# fit ipw model for a single bootstrap sample
fit_ipw_not_quite_rightly <- function(.split, ...) { 
  # get bootstrapped data frame
  .df <- as.data.frame(.split)
  
  # fit ipw model
  lm(wt82_71 ~ qsmk, data = .df, weights = wts) |>
    tidy()
}
```

## {.small}

```{r}
fit_ipw <- function(.split, ...) {
  # get bootstrapped data frame
  .df <- as.data.frame(.split)
  
  # fit propensity score model
  propensity_model <- glm(
    qsmk ~ sex + 
      race + age + I(age^2) + education + 
      smokeintensity + I(smokeintensity^2) + 
      smokeyrs + I(smokeyrs^2) + exercise + active + 
      wt71 + I(wt71^2), 
    family = binomial(), 
    data = .df
  )
  
  # calculate inverse probability weights
  .df <- propensity_model |>
    augment(type.predict = "response", data = .df) |>
    mutate(wts = wt_ate(.fitted, qsmk))
  
  # fit correctly bootstrapped ipw model
  lm(wt82_71 ~ qsmk, data = .df, weights = wts) |>
    tidy()
}
```

## Using {rsample} to bootstrap our causal effect

. . .

```{r}
#| label: boot_cache
#| code-line-numbers: "|2-3"
# fit ipw model to bootstrapped samples
ipw_results <- bootstraps(nhefs_complete_uc, 1000, apparent = TRUE) |>
  mutate(results = map(splits, fit_ipw)) 
```

## Using {rsample} to bootstrap our causal effect

```{r}
#| code-line-numbers: "|2"
#| output-location: slide
# get t-statistic-based CIs
boot_estimate <- int_t(ipw_results, results) |> 
  filter(term == "qsmk")

boot_estimate
```

## {.center}

```{r}
#| echo: false
bind_rows(
  ipw_estimate |>
    select(estimate, conf.low, conf.high) |>
    mutate(type = "ols"),
  ipw_estimate_robust |>
    select(estimate, conf.low, conf.high) |>
    mutate(type = "robust"),
  boot_estimate |>
    select(estimate = .estimate, conf.low = .lower, conf.high = .upper) |>
    mutate(type = "bootstrap")
) |>
  #  calculate CI width to sort by it
  mutate(width = conf.high - conf.low) |>
  arrange(width) |>
  #  fix the order of the model types for the plot  
  mutate(type = fct_inorder(type)) |>
  ggplot(aes(x = type, y = estimate, ymin = conf.low, ymax = conf.high)) + 
    geom_pointrange(color = "#0172B1", size = 1, fatten = 3) +
    coord_flip() +
    theme_minimal(base_size = 20) +
    theme(axis.title.y = element_blank())
```

## {background-color="#23373B" .center}

### *Our causal effect estimate: **3.5 kg (95% CI 2.4 kg, 4.4 kg)***

## {background-color="#23373B" .center}

### **Review the Quarto file... later!**

## Resources {background-color="#23373B"}
### [Causal Inference](https://www.hsph.harvard.edu/miguel-hernan/causal-inference-book/): Comprehensive text on causal inference. Free online.
### [Bootstrap confidence intervals with {rsample}](https://rsample.tidymodels.org/articles/Applications/Intervals.html)
### [R-causal](https://github.com/r-causal): Our GitHub org with R packages and examples
